{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\github\\\\frontend\\\\react\\\\2-2L-react\\\\redux_useeffect\\\\src\\\\WrapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport HeaderComponent from './wrap/HeaderComponent.jsx';\nimport MainComponent from './wrap/MainComponent.jsx';\nimport FooterComponent from './wrap/FooterComponent.jsx';\nimport Sub1Component from './wrap/sub/Sub1Component.jsx';\nimport Sub2Component from './wrap/sub/Sub2Component.jsx';\nimport Sub3Component from './wrap/sub/Sub3Component.jsx';\nimport Sub4Component from './wrap/sub/Sub4Component.jsx';\nimport Sub5Component from './wrap/sub/Sub5Component.jsx';\nimport Sub6Component from './wrap/sub/Sub6Component.jsx';\nimport Sub7Component from './wrap/sub/Sub7Component.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WrapComponent() {\n  _s();\n  // 리액트에서 모든 변수는 상태관리 규칙에 따른다.\n  // const [게터함수(getter), 세터함수(setter 게터변수를 변경하는 함수)] = React.useState(초기값);\n  const [main, setMain] = React.useState(true);\n  const [sub1, setSub1] = React.useState(false);\n  const [sub2, setSub2] = React.useState(false);\n  const [sub3, setSub3] = React.useState(false);\n  const [sub4, setSub4] = React.useState(false);\n  const [sub5, setSub5] = React.useState(false);\n  const [sub6, setSub6] = React.useState(false);\n  const [sub7, setSub7] = React.useState(false);\n  const [sub, setSub] = React.useState([false, false, false, false, false, false, false]);\n  const [state, setState] = React.useState({\n    // 메인 + 서브7=총8개 메뉴\n    menu: [true, false, false, false, false, false, false, false]\n    // menu:Array(8).fill(false)\n  });\n\n  // 메인 인트로 페이지 컴포넌트를 보이게 함\n  // 첫화면 나오면서 실행하는 useEffect();\n  // menu 첫번째를 true로 설정\n  React.useEffect(() => {\n    let menu = state.menu;\n    menu[0] = true;\n    setState({\n      ...state,\n      menu: menu\n    });\n  }, []);\n\n  // 0-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 0-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const mainSetter = () => {\n    let menu = Array().fill(false); //배열채우기\n    menu[0] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 7-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 7-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n\n  //메뉴1개(매개변수 인덱스번호)\n  const menuSetter = idx => {\n    let menu = Array(8).fill(false); // 임시변수로 마음대로 변경하고 처리하고 그리고 마지막에 세터함수에 넣어준다.\n    menu[idx] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      mainSetter: mainSetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), state.menu[0] && /*#__PURE__*/_jsxDEV(MainComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 38\n    }, this), state.menu[1] && /*#__PURE__*/_jsxDEV(Sub1Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 38\n    }, this), state.menu[2] && /*#__PURE__*/_jsxDEV(Sub2Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 38\n    }, this), state.menu[3] && /*#__PURE__*/_jsxDEV(Sub3Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 38\n    }, this), state.menu[4] && /*#__PURE__*/_jsxDEV(Sub4Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 38\n    }, this), state.menu[5] && /*#__PURE__*/_jsxDEV(Sub5Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 38\n    }, this), state.menu[6] && /*#__PURE__*/_jsxDEV(Sub6Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 38\n    }, this), state.menu[7] && /*#__PURE__*/_jsxDEV(Sub7Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n_s(WrapComponent, \"LNtHzrgGtgLLnc7fx4fyL8u7Cog=\");\n_c = WrapComponent;\nvar _c;\n$RefreshReg$(_c, \"WrapComponent\");","map":{"version":3,"names":["React","HeaderComponent","MainComponent","FooterComponent","Sub1Component","Sub2Component","Sub3Component","Sub4Component","Sub5Component","Sub6Component","Sub7Component","jsxDEV","_jsxDEV","WrapComponent","_s","main","setMain","useState","sub1","setSub1","sub2","setSub2","sub3","setSub3","sub4","setSub4","sub5","setSub5","sub6","setSub6","sub7","setSub7","sub","setSub","state","setState","menu","useEffect","mainSetter","Array","fill","menuSetter","idx","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/github/frontend/react/2-2L-react/redux_useeffect/src/WrapComponent.jsx"],"sourcesContent":["import React from 'react';\r\nimport HeaderComponent from './wrap/HeaderComponent.jsx';\r\nimport MainComponent from './wrap/MainComponent.jsx';\r\nimport FooterComponent from './wrap/FooterComponent.jsx';\r\nimport Sub1Component from './wrap/sub/Sub1Component.jsx';\r\nimport Sub2Component from './wrap/sub/Sub2Component.jsx';\r\nimport Sub3Component from './wrap/sub/Sub3Component.jsx';\r\nimport Sub4Component from './wrap/sub/Sub4Component.jsx';\r\nimport Sub5Component from './wrap/sub/Sub5Component.jsx';\r\nimport Sub6Component from './wrap/sub/Sub6Component.jsx';\r\nimport Sub7Component from './wrap/sub/Sub7Component.jsx';\r\n\r\n\r\nexport  default function  WrapComponent () {\r\n\r\n    // 리액트에서 모든 변수는 상태관리 규칙에 따른다.\r\n    // const [게터함수(getter), 세터함수(setter 게터변수를 변경하는 함수)] = React.useState(초기값);\r\n    const [main, setMain] = React.useState(true);\r\n    const [sub1, setSub1] = React.useState(false);\r\n    const [sub2, setSub2] = React.useState(false);\r\n    const [sub3, setSub3] = React.useState(false);\r\n    const [sub4, setSub4] = React.useState(false);\r\n    const [sub5, setSub5] = React.useState(false);\r\n    const [sub6, setSub6] = React.useState(false);\r\n    const [sub7, setSub7] = React.useState(false);\r\n    \r\n    const [sub, setSub] = React.useState([false,false,false,false,false,false,false]);\r\n\r\n    const [state, setState] = React.useState({\r\n        // 메인 + 서브7=총8개 메뉴\r\n        menu:[true, false,false,false,false,false,false,false],\r\n        // menu:Array(8).fill(false)\r\n    });\r\n\r\n    // 메인 인트로 페이지 컴포넌트를 보이게 함\r\n    // 첫화면 나오면서 실행하는 useEffect();\r\n    // menu 첫번째를 true로 설정\r\n    React.useEffect(()=>{\r\n        let menu= state.menu;\r\n        menu[0]=true;\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n\r\n    },[]);\r\n\r\n    \r\n\r\n    // 0-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 0-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const mainSetter=()=>{\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[0] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 7-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 7-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n\r\n    //메뉴1개(매개변수 인덱스번호)\r\n    const menuSetter=(idx)=>{\r\n        let menu = Array(8).fill(false); // 임시변수로 마음대로 변경하고 처리하고 그리고 마지막에 세터함수에 넣어준다.\r\n        menu[idx] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n            <div id='wrap'>\r\n                <HeaderComponent \r\n                mainSetter={mainSetter}\r\n                />\r\n                    {state.menu[0] &&<MainComponent />}\r\n                    {state.menu[1] &&<Sub1Component />}\r\n                    {state.menu[2] &&<Sub2Component />}\r\n                    {state.menu[3] &&<Sub3Component />}\r\n                    {state.menu[4] &&<Sub4Component />}\r\n                    {state.menu[5] &&<Sub5Component />}\r\n                    {state.menu[6] &&<Sub6Component />}\r\n                    {state.menu[7] &&<Sub7Component />}\r\n                {<FooterComponent />}\r\n            </div>\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,aAAa,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,eAAgB,SAAUC,aAAaA,CAAA,EAAI;EAAAC,EAAA;EAEvC;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGrB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGvB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGzB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAG3B,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAG7B,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAG/B,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGjC,KAAK,CAACiB,QAAQ,CAAC,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,CAAC;EAEjF,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,KAAK,CAACiB,QAAQ,CAAC;IACrC;IACAmB,IAAI,EAAC,CAAC,IAAI,EAAE,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK;IACrD;EACJ,CAAC,CAAC;;EAEF;EACA;EACA;EACApC,KAAK,CAACqC,SAAS,CAAC,MAAI;IAChB,IAAID,IAAI,GAAEF,KAAK,CAACE,IAAI;IACpBA,IAAI,CAAC,CAAC,CAAC,GAAC,IAAI;IACZD,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,IAAI,EAAEA;IACV,CAAC,CAAC;EAEN,CAAC,EAAC,EAAE,CAAC;;EAIL;EACA;EACA,MAAME,UAAU,GAACA,CAAA,KAAI;IACjB,IAAIF,IAAI,GAAGG,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAChCJ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAChBD,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,IAAI,EAAEA;IACV,CAAC,CAAC;EACN,CAAC;;EAED;EACA;;EAEA;EACA,MAAMK,UAAU,GAAEC,GAAG,IAAG;IACpB,IAAIN,IAAI,GAAGG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjCJ,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IAClBP,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,IAAI,EAAEA;IACV,CAAC,CAAC;EACN,CAAC;EAGD,oBACQxB,OAAA;IAAK+B,EAAE,EAAC,MAAM;IAAAC,QAAA,gBACVhC,OAAA,CAACX,eAAe;MAChBqC,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACGd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACV,aAAa;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACR,aAAa;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACP,aAAa;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACN,aAAa;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACL,aAAa;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACJ,aAAa;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACH,aAAa;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCd,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,iBAAGxB,OAAA,CAACF,aAAa;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCpC,OAAA,CAACT,eAAe;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAElB;AAAClC,EAAA,CA7EyBD,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}