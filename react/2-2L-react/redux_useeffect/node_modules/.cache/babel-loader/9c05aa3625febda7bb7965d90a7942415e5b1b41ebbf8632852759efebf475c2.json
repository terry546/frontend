{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\github\\\\frontend\\\\react\\\\2-2L-react\\\\redux_useeffect\\\\src\\\\WrapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport HeaderComponent from './wrap/HeaderComponent.jsx';\nimport MainComponent from './wrap/MainComponent.jsx';\nimport FooterComponent from './wrap/FooterComponent.jsx';\nimport Sub1Component from './wrap/sub/Sub1Component.jsx';\nimport Sub2Component from './wrap/sub/Sub2Component.jsx';\nimport Sub3Component from './wrap/sub/Sub3Component.jsx';\nimport Sub4Component from './wrap/sub/Sub4Component.jsx';\nimport Sub5Component from './wrap/sub/Sub5Component.jsx';\nimport Sub6Component from './wrap/sub/Sub6Component.jsx';\nimport Sub7Component from './wrap/sub/Sub7Component.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WrapComponent() {\n  _s();\n  // 리액트에서 모든 변수는 상태관리 규칙에 따른다.\n  // const [게터함수(getter), 세터함수(setter 게터변수를 변경하는 함수)] = React.useState(초기값);\n  const [main, setMain] = React.useState(true);\n  const [sub1, setSub1] = React.useState(false);\n  const [sub2, setSub2] = React.useState(false);\n  const [sub3, setSub3] = React.useState(false);\n  const [sub4, setSub4] = React.useState(false);\n  const [sub5, setSub5] = React.useState(false);\n  const [sub6, setSub6] = React.useState(false);\n  const [sub7, setSub7] = React.useState(false);\n  const [sub, setSub] = React.useState([false, false, false, false, false, false, false]);\n  const [state, setState] = React.useState({\n    main: true,\n    sub1: false,\n    sub2: false,\n    sub3: false,\n    sub4: false,\n    sub5: false,\n    sub6: false,\n    sub7: false,\n    sub: [false, false, false, false, false, false, false],\n    // 메인 + 서브7=총8개 메뉴\n    menu: [true, false, false, false, false, false, false, false]\n  });\n\n  // 0-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 0-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const mainSetter = () => {\n    setSub1(false);\n    setMain(true);\n    setSub2(false);\n    setSub3(false);\n    setSub4(false);\n    setSub5(false);\n    setSub6(false);\n    setSub7(false);\n\n    // menu[8] => 메뉴별 변경하는 코딩\n    // const => 선언과 동시 변경가능\n    // const => 선언하고 나중에 변경 불가능\n    // 초기화 => 단 1개의 메뉴만 true 나머지 모두 false\n    // menu =[false,false,false,false,false,false,false]\n    let menu = Array().fill(false); //배열채우기\n    menu[0] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 1-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 1-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub1Setter = () => {\n    setSub1(true);\n    setMain(false);\n    setSub2(false);\n    setSub3(false);\n    setSub4(false);\n    setSub5(false);\n    setSub6(false);\n    setSub7(false);\n    let menu = Array().fill(false); //배열채우기\n    menu[1] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 2-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 2-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub2Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(true);\n    setSub3(false);\n    setSub4(false);\n    setSub5(false);\n    setSub6(false);\n    setSub7(false);\n    menu = Array().fill(false);\n    menu[2] = true;\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 3-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 3-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub3Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(false);\n    setSub3(true);\n    setSub4(false);\n    setSub5(false);\n    setSub6(false);\n    setSub7(false);\n    let menu = Array().fill(false); //배열채우기\n    menu[3] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 4-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 4-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub4Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(false);\n    setSub3(false);\n    setSub4(true);\n    setSub5(false);\n    setSub6(false);\n    setSub7(false);\n    let menu = Array().fill(false); //배열채우기\n    menu[4] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 4-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 4-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub5Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(false);\n    setSub3(false);\n    setSub4(false);\n    setSub5(true);\n    setSub6(false);\n    setSub7(false);\n    let menu = Array().fill(false); //배열채우기\n    menu[5] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 6-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 6-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub6Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(false);\n    setSub3(false);\n    setSub4(false);\n    setSub5(false);\n    setSub6(true);\n    setSub7(false);\n    let menu = Array().fill(false); //배열채우기\n    menu[6] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n\n  // 7-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\n  // 7-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\n  const sub7Setter = () => {\n    setSub1(false);\n    setMain(false);\n    setSub2(false);\n    setSub3(false);\n    setSub4(false);\n    setSub5(false);\n    setSub6(false);\n    setSub7(true);\n    let menu = Array().fill(false); //배열채우기\n    menu[7] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\n    setState({\n      ...state,\n      menu: menu\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {\n      mainSetter: mainSetter,\n      sub1Setter: sub1Setter,\n      sub2Setter: sub2Setter,\n      sub3Setter: sub3Setter,\n      sub4Setter: sub4Setter,\n      sub5Setter: sub5Setter,\n      sub6Setter: sub6Setter,\n      sub7Setter: sub7Setter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this), main && /*#__PURE__*/_jsxDEV(MainComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 30\n    }, this), sub1 && /*#__PURE__*/_jsxDEV(Sub1Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }, this), sub2 && /*#__PURE__*/_jsxDEV(Sub2Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }, this), sub3 && /*#__PURE__*/_jsxDEV(Sub3Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }, this), sub4 && /*#__PURE__*/_jsxDEV(Sub4Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }, this), sub5 && /*#__PURE__*/_jsxDEV(Sub5Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }, this), sub6 && /*#__PURE__*/_jsxDEV(Sub6Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }, this), sub7 && /*#__PURE__*/_jsxDEV(Sub7Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 13\n  }, this);\n}\n_s(WrapComponent, \"ltgAJKk88Mc5C3c5mpqOxa5WU9k=\");\n_c = WrapComponent;\nvar _c;\n$RefreshReg$(_c, \"WrapComponent\");","map":{"version":3,"names":["React","HeaderComponent","MainComponent","FooterComponent","Sub1Component","Sub2Component","Sub3Component","Sub4Component","Sub5Component","Sub6Component","Sub7Component","jsxDEV","_jsxDEV","WrapComponent","_s","main","setMain","useState","sub1","setSub1","sub2","setSub2","sub3","setSub3","sub4","setSub4","sub5","setSub5","sub6","setSub6","sub7","setSub7","sub","setSub","state","setState","menu","mainSetter","Array","fill","sub1Setter","sub2Setter","sub3Setter","sub4Setter","sub5Setter","sub6Setter","sub7Setter","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/github/frontend/react/2-2L-react/redux_useeffect/src/WrapComponent.jsx"],"sourcesContent":["import React from 'react';\r\nimport HeaderComponent from './wrap/HeaderComponent.jsx';\r\nimport MainComponent from './wrap/MainComponent.jsx';\r\nimport FooterComponent from './wrap/FooterComponent.jsx';\r\nimport Sub1Component from './wrap/sub/Sub1Component.jsx';\r\nimport Sub2Component from './wrap/sub/Sub2Component.jsx';\r\nimport Sub3Component from './wrap/sub/Sub3Component.jsx';\r\nimport Sub4Component from './wrap/sub/Sub4Component.jsx';\r\nimport Sub5Component from './wrap/sub/Sub5Component.jsx';\r\nimport Sub6Component from './wrap/sub/Sub6Component.jsx';\r\nimport Sub7Component from './wrap/sub/Sub7Component.jsx';\r\n\r\n\r\nexport  default function  WrapComponent () {\r\n\r\n    // 리액트에서 모든 변수는 상태관리 규칙에 따른다.\r\n    // const [게터함수(getter), 세터함수(setter 게터변수를 변경하는 함수)] = React.useState(초기값);\r\n    const [main, setMain] = React.useState(true);\r\n    const [sub1, setSub1] = React.useState(false);\r\n    const [sub2, setSub2] = React.useState(false);\r\n    const [sub3, setSub3] = React.useState(false);\r\n    const [sub4, setSub4] = React.useState(false);\r\n    const [sub5, setSub5] = React.useState(false);\r\n    const [sub6, setSub6] = React.useState(false);\r\n    const [sub7, setSub7] = React.useState(false);\r\n    \r\n    const [sub, setSub] = React.useState([false,false,false,false,false,false,false]);\r\n\r\n    const [state, setState] = React.useState({\r\n        main:true,\r\n        sub1:false,\r\n        sub2:false,\r\n        sub3:false,\r\n        sub4:false,\r\n        sub5:false,\r\n        sub6:false,\r\n        sub7:false,\r\n        sub:[false,false,false,false,false,false,false],\r\n        // 메인 + 서브7=총8개 메뉴\r\n        menu:[true, false,false,false,false,false,false,false]\r\n        \r\n        \r\n    });\r\n\r\n    // 0-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 0-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const mainSetter=()=>{\r\n        setSub1(false);\r\n        setMain(true);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(false);\r\n\r\n        // menu[8] => 메뉴별 변경하는 코딩\r\n        // const => 선언과 동시 변경가능\r\n        // const => 선언하고 나중에 변경 불가능\r\n        // 초기화 => 단 1개의 메뉴만 true 나머지 모두 false\r\n        // menu =[false,false,false,false,false,false,false]\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[0] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 1-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 1-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub1Setter=()=>{\r\n        setSub1(true);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(false);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[1] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 2-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 2-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub2Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(true);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(false);\r\n\r\n        menu = Array().fill(false);\r\n        menu[2] = true;\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 3-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 3-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub3Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(true);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(false);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[3] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 4-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 4-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub4Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(true);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(false);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[4] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n        // 4-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 4-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub5Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(true);\r\n        setSub6(false);\r\n        setSub7(false);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[5] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 6-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 6-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub6Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(true);\r\n        setSub7(false);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[6] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n\r\n    // 7-1. 서브1 신상품 페이지가 보이도록 하는 세터 함수\r\n    // 7-2. sub1Setter() 함수를 헤더컴포넌트에게 프롭스로 내려준다.\r\n    const sub7Setter=()=>{\r\n        setSub1(false);\r\n        setMain(false);\r\n        setSub2(false);\r\n        setSub3(false);\r\n        setSub4(false);\r\n        setSub5(false);\r\n        setSub6(false);\r\n        setSub7(true);\r\n        let menu = Array().fill(false); //배열채우기\r\n        menu[7] = true; // 메인메뉴 배열 첫번째 값을 true로 변경\r\n        setState({\r\n            ...state,\r\n            menu: menu\r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n            <div id='wrap'>\r\n                <HeaderComponent \r\n                mainSetter={mainSetter}\r\n                sub1Setter={sub1Setter}\r\n                sub2Setter={sub2Setter}\r\n                sub3Setter={sub3Setter}\r\n                sub4Setter={sub4Setter}\r\n                sub5Setter={sub5Setter}\r\n                sub6Setter={sub6Setter}\r\n                sub7Setter={sub7Setter}\r\n                />\r\n                    {main && <MainComponent />}\r\n                    {sub1 &&<Sub1Component />}\r\n                    {sub2 &&<Sub2Component />}\r\n                    {sub3 &&<Sub3Component />}\r\n                    {sub4 &&<Sub4Component />}\r\n                    {sub5 &&<Sub5Component />}\r\n                    {sub6 &&<Sub6Component />}\r\n                    {sub7 &&<Sub7Component />}\r\n                {<FooterComponent />}\r\n            </div>\r\n    )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}